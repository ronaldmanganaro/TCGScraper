name: Docker Image CI

on:
  push:
    branches: 
      - '*'
    paths: 
      - 'docker/docker.ai'
      - 'streamlit/**'
  
jobs:
  filter:
    runs-on: self-hosted
    outputs:
      ai: ${{ steps.filter.outputs.ai }}
      streamlit: ${{ steps.filter.outputs.streamlit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload source
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: ./

      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            ai:
              - 'docker/docker.ai'
            streamlit:
              - 'streamlit/**'

  build-ai:
    needs: filter
    if: needs.filter.outputs.ai == 'true'
    runs-on: self-hosted
    steps:
    - uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    # Build and push ai image
    - name: Download ai model from s3
      run: |
        aws s3 cp s3://your-bucket-name/path/to/your-file ./local-file-name

  build-streamlit:
    needs: filter
    if: needs.filter.outputs.streamlit == 'true'
    runs-on: self-hosted
    steps:
    - name: Build streamlit Docker image
      run: |
        branch_name=${{ github.ref_name}}
        $tag = "rmangana/streamlit:${branch_name}
        docker build . -f docker/Dockerfile.streamlit --build-arg VOLUME_PATH=./ --tag $tag
          
    - name: Upload streamlit image to Dockerhub
      run: |
        $tag = "rmangana/streamlit:${branch_name}"
        echo "${{ secrets.DOCKERHUB_PAT }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME}}" --password-stdin
        docker push $tag